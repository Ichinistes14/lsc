<!DOCTYPE html>
<html lang="en" data-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Los Santos Custom</title>
    <link rel="stylesheet" href="/css/main.css" />
    <link
      rel="icon"
      href="https://raw.githubusercontent.com/Ichinistes14/lsc/refs/heads/main/public/img/logo-lsc.ico"
      type="image/x-icon"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
  </head>
  <body>
    <nav class="navbar" role="navigation" aria-label="main navigation">
      <div class="navbar-brand">
        <a class="navbar-item" style="pointer-events: none; cursor: default">
          <img src="img/logo.svg" />
        </a>

        <a
          role="button"
          class="navbar-burger"
          aria-label="menu"
          aria-expanded="false"
          data-target="navbarBasicExample"
        >
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
        </a>
      </div>

      <div id="navbarBasicExample" class="navbar-menu">
        <div class="navbar-start">
          <a class="navbar-item" href="/"> Accueil </a>
          <a class="navbar-item has-text-weight-bold" href="/stats">
            Statistique
          </a>
          <a class="navbar-item" href="/employe"> Employ√© </a>
          <a class="navbar-item" href="/facture"> Factures </a>
          <a class="navbar-item" href="/tombola"> Tombola </a>
          <a class="navbar-item" href="/message"> Message </a>
        </div>

        <% if (isa) { %>
        <div class="navbar-end">
          <div class="navbar-item">
            <div class="buttons">
              <a class="button is-primary" href="/gestion/home">
                <strong>Gestion</strong>
              </a>
            </div>
          </div>
        </div>
        <% } %>
      </div>
    </nav>

    <div class="container has-text-centered mt-6 mb-3">
      <div class="section">
        <h2 class="title is-2">Statistique LSC</h2>
        <hr style="width: 50%" />
        <% if (isa) { %>
        <div class="field has-addons has-addons-centered">
          <div class="control" style="width: 50%">
            <input
              type="text"
              class="input"
              id="add-stat"
              placeholder="Nouveau montant en banque"
            />
          </div>
          <div class="control">
            <button id="btn-stat" class="button is-primary">
              <span class="icon">
                <i class="fa-solid fa-plus"></i>
              </span>
            </button>
          </div>
        </div>
        <% } %>
        <div>
          <canvas id="myChart"></canvas>
        </div>
      </div>
    </div>
  </body>

  <script src="https://code.jquery.com/jquery-3.7.1.min.js" defer></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    const btn = document.getElementById("btn-stat");

    if (btn) {
      btn.addEventListener("click", async () => {
        const value = document.getElementById("add-stat").value;
        const response = await fetch("/api/stats", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ value }),
        });

        if (response.ok) {
          window.location.reload();
        }
      });
    }

    $(document).ready(function () {
      $(".navbar-burger").click(function () {
        $(".navbar-burger").toggleClass("is-active");
        $(".navbar-menu").toggleClass("is-active");
      });
    });
  </script>
  <script>
      const ctx = document.getElementById("myChart");
      const historyData = <%- JSON.stringify(data) %>;
      const skipped = (ctx, value) =>
    ctx.p0.skip || ctx.p1.skip ? value : undefined;
      const down = (ctx, value) =>
    ctx.p0.parsed.y > ctx.p1.parsed.y ? value : undefined;

      const labels = historyData.map((entry) => entry.label);
      const data = historyData.map((entry) => entry.value);

      const genericOptions = {
        fill: false,
        interaction: {
          intersect: false,
        },
        radius: 2.5,
        plugins: {
          legend: {
            display: false,
          },
          tooltip: {
            enabled: false,
            external: function (context) {
              let tooltipEl = document.getElementById("chartjs-tooltip");

              if (!tooltipEl) {
                tooltipEl = document.createElement("div");
                tooltipEl.id = "chartjs-tooltip";
                tooltipEl.style.background = "rgba(0, 0, 0, 0.8)";
                tooltipEl.style.borderRadius = "4px";
                tooltipEl.style.color = "white";
                tooltipEl.style.opacity = 1;
                tooltipEl.style.pointerEvents = "none";
                tooltipEl.style.position = "absolute";
                tooltipEl.style.transform = "translate(-50%, 0)";
                tooltipEl.style.transition = "all 0.1s ease";
                document.body.appendChild(tooltipEl);
              }

              const tooltipModel = context.tooltip;
              if (tooltipModel.opacity === 0) {
                tooltipEl.style.opacity = 0;
                return;
              }

              if (tooltipModel.body) {
                const body = tooltipModel.body[0].lines[0];
                const datasetIndex = tooltipModel.dataPoints[0].datasetIndex;
                const dataIndex = tooltipModel.dataPoints[0].dataIndex;
                const dataset = context.chart.data.datasets[datasetIndex];

                const value = dataset.data[dataIndex];
                const previousValue =
                  dataIndex > 0 ? dataset.data[dataIndex - 1] : null;

                let html = `<div style="font-size:12px; padding:4px 8px;">`;
                html += `<strong>$${value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ")}</strong>`;

                if (previousValue !== null) {
                  const diff = value - previousValue;
                  const percentChange = ((diff / previousValue) * 100).toFixed(2);
                  const color = percentChange > 0 ? "#4bc0c0" : "rgb(192,75,75)";

                  html += ` <span style="color:${color}">(${
                    percentChange > 0 ? "+" : ""
                  }${percentChange}%)</span>`;
                }

                html += `</div>`;
                tooltipEl.innerHTML = html;
              }

              const position = context.chart.canvas.getBoundingClientRect();
              tooltipEl.style.opacity = 1;
              tooltipEl.style.left =
                position.left + window.pageXOffset + tooltipModel.caretX + "px";
              tooltipEl.style.top =
                position.top + window.pageYOffset + tooltipModel.caretY + "px";
            },
          },
        },
        locale: "fr",
        responsive: true,
      };

      new Chart(ctx, {
        type: "line",
        data: {
          labels,
          datasets: [
            {
              data,
              borderColor: "rgb(75, 192, 192)",
              segment: {
                borderColor: (ctx) =>
                  skipped(ctx, "rgb(0,0,0,0.2)") || down(ctx, "rgb(192,75,75)"),
                borderDash: (ctx) => skipped(ctx, [6, 6]),
              },
              spanGaps: true,
            },
          ],
        },
        options: genericOptions,
      });
  </script>
</html>
